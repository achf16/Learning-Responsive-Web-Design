/*  Important Knowledge:
@   The box-sizing property in CSS determines how the width and height of an element are calculated. There are two main values:
        - content-box (default): The width and height properties only include the content. Padding, borders, and margins
                                 are added outside these dimensions.
        - border-box: The width and height properties include the content, padding, and borders. This makes it easier to
                      size elements consistently, as you donâ€™t need to add extra width for padding or borders.

@   The CSS global selector is represented by the asterisk (*). It selects all elements on a webpage.

@   Flexbox is a one-dimensional CSS layout that can control the way items are spaced out and aligned within a container.
    To use it, give an element a display property of flex. This will make the element a flex container. Any direct
    children of a flex container are called flex items

@   Pseudo-selectors:
        : is for element states.
        :: is for parts of elements.
*/

*{
    box-sizing: border-box;
}

body{
    margin: 0;
    font-family: "JetBrains Mono Medium", "Arial Narrow", Arial, serif;
    background-color: #EFE2D7;
}

.gallery img{
    width: 100%;
    max-width: 350px;
    height: 350px;
    object-fit: cover;  /* If an image have become distorted rather than change the aspect radio individually, you can
                           use the object-fit property to determine how images should behave. This will tell the image
                           to fill the img container while maintaining aspect ratio, resulting in cropping to fit.*/
    border-radius: 15px;
}

.header{
    text-align: center;
    padding: 20px;
    color: #fff;
    background-color: #31587D;
    text-transform: uppercase;
    border-bottom: 4px solid #327D31;
}

.gallery{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;    /* flex-wrap attribute define the behave of the flex items contained on the flexbox when the space
                            is too small. Setting it to wrap will allow the items to wrap to the next row or column.
                            nowrap (default) will prevent your items from wrapping and shrink them if needed.*/
    justify-content: center;  /*The justify-content property determines how the items inside a flex container are
                                positioned along the main axis, affecting their position and the space around them.*/
    align-items: center;    /*The align-items property positions the flex content along the cross axis. In this case,
                              with your flex-direction set to row, your cross axis would be vertical.*/
    max-width: 1300px;
    padding: 20px 10px;
    margin: 0 auto;
    gap: 15px;  /*This property sets the gutters between flex items*/
}

.gallery::after{
    content: "";
    width: 350px;
}
